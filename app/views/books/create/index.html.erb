<%= render partial: 'shared/page_title', locals: { page_title: '書籍新規登録' } %>

<main class="main">
  <div class="wrap">
    <%= form_with model: @book, url: books_create_confirm_path, class: 'book-form', local: true do |new_book| %>
    <div class="book-form__inner">
      <h2 class="book-form__heading">書籍登録</h2>
      <div class="book-form__item">
        <%= new_book.text_field :title, class: 'book-form__text', placeholder: '書籍名' %>
      </div>
      <div class="book-form__item">
        <%= new_book.number_field :title, class: 'book-form__number', placeholder: 'ページ数' %>
      </div>
      <div class="book-form__item">
        <%= new_book.text_field :title, onfocus: "this.type='date'", onblur: "this.type='text'", class: 'book-form__date', placeholder: '出版日' %>
      </div>
      <div class="book-form__item image">
        <%= new_book.label :image, '書籍画像' %>
        <%= new_book.file_field :image, class: 'book-form__file' %>
        <div id="image_preview"></div>
      </div>
      <div class="book-form__item">
        <%= new_book.text_field :title, class: 'book-form__text', placeholder: '著者名' %>
      </div>
      <div class="book-form__item">
        <%= new_book.collection_select :book_format_id, BookFormat.all, :id, :name, {prompt: "書籍形式"}, :class => 'book-form__select' %>
      </div>
      <div class="book-form__item">
        <%= new_book.collection_select :publisher_id, Publisher.all, :id, :name, {prompt: "出版社"}, :class => 'book-form__select' %>
      </div>
      <div class="book-form__item">
        <%= new_book.collection_select :book_language_id, BookLanguage.all, :id, :name, {prompt: "書籍言語"}, :class => 'book-form__select' %>
      </div>
      <div class="book-form__item">
        <%= new_book.submit '確認する', class: 'book-form__submit' %>
      </div>
    </div>
    <% end %>
  </div>
</main>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // プレビューエリア取得
    const imageElement = document.getElementById('image_preview');

    // imageを生成する為の関数
    const createImage = (blob) => {
      imageElement.style.display = 'block';
      const blobImage = document.createElement('img');
      blobImage.setAttribute('src', blob);

      imageElement.appendChild(blobImage);
    }

    document.getElementById('book_image').addEventListener('change', (e) => {
      // 画像プレビューの無限複製を防ぐ
      const imageContent = document.querySelector('img');
      if (imageContent) {
        imageContent.remove();
        imageElement.style.display = 'none';
      }
      const file = e.target.files[0];
      const blob = window.URL.createObjectURL(file);
      createImage(blob);
    })
  })
</script>
